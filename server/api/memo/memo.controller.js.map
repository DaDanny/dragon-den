{"version":3,"sources":["../../../../server/api/memo/memo.controller.js"],"names":["index","show","create","update","destroy","respondWithResult","res","statusCode","entity","status","json","saveUpdates","updates","updated","extend","save","then","removeEntity","remove","end","handleEntityNotFound","handleError","err","send","req","find","memoType","populate","exec","catch","findById","params","id","body","_id"],"mappings":"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","file":"memo.controller.js","sourcesContent":["/**\n * Using Rails-like standard naming convention for endpoints.\n * GET     /api/memos              ->  index\n * POST    /api/memos              ->  create\n * GET     /api/memos/:id          ->  show\n * PUT     /api/memos/:id          ->  update\n * DELETE  /api/memos/:id          ->  destroy\n */\n\n'use strict';\n\nimport _ from 'lodash';\nimport Memo from '../../models/memo.model';\n\nfunction respondWithResult(res, statusCode) {\n  statusCode = statusCode || 200;\n  return function(entity) {\n    if (entity) {\n      res.status(statusCode).json(entity);\n    }\n  };\n}\n\nfunction saveUpdates(updates) {\n  return function(entity) {\n    var updated = _.extend(entity, updates);\n    return updated.save()\n      .then(updated => {\n        return updated;\n      });\n  };\n}\n\nfunction removeEntity(res) {\n  return function(entity) {\n    if (entity) {\n      return entity.remove()\n        .then(() => {\n          return res.status(204).end();\n        });\n    }\n  };\n}\n\nfunction handleEntityNotFound(res) {\n  return function(entity) {\n    if (!entity) {\n      res.status(404).end();\n      return null;\n    }\n    return entity;\n  };\n}\n\nfunction handleError(res, statusCode) {\n  statusCode = statusCode || 500;\n  return function(err) {\n    res.status(statusCode).send(err);\n  };\n}\n\n// Gets a list of Memos\nexport function index(req, res) {\n  return Memo.find({\n    memoType : 'parent-memo'\n  }).populate('childMemos parentMemo')\n    .exec()\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Gets a single Memo from the DB\nexport function show(req, res) {\n  return Memo.findById(req.params.id).populate('childMemos parentMemo').exec()\n    .then(handleEntityNotFound(res))\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Creates a new Memo in the DB\nexport function create(req, res) {\n  return Memo.create(req.body)\n    .then(respondWithResult(res, 201))\n    .catch(handleError(res));\n}\n\n// Updates an existing Memo in the DB\nexport function update(req, res) {\n  if (req.body._id) {\n    delete req.body._id;\n  }\n  return Memo.findById(req.params.id).populate('childMemos parentMemo').exec()\n    .then(handleEntityNotFound(res))\n    .then(saveUpdates(req.body))\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Deletes a Memo from the DB\nexport function destroy(req, res) {\n  return Memo.findById(req.params.id).exec()\n    .then(handleEntityNotFound(res))\n    .then(removeEntity(res))\n    .catch(handleError(res));\n}\n"]}