{"version":3,"sources":["../../../../server/api/masterTimeline/masterTimeline.controller.js"],"names":["index","show","create","update","destroy","getAllMasterTasks","RoomTimelineCtrl","require","TimelineTaskCtrl","async","respondWithResult","res","statusCode","entity","status","json","saveUpdates","updates","updated","extend","save","then","removeEntity","remove","end","handleEntityNotFound","handleError","err","send","req","find","exec","catch","findById","params","id","body","_id"],"mappings":"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","file":"masterTimeline.controller.js","sourcesContent":["/**\n * Using Rails-like standard naming convention for endpoints.\n * GET     /api/masterTimeline              ->  index\n * POST    /api/masterTimeline              ->  create\n * GET     /api/masterTimeline/:id          ->  show\n * PUT     /api/masterTimeline/:id          ->  update\n * DELETE  /api/masterTimeline/:id          ->  destroy\n */\n\n'use strict';\n\nimport _ from 'lodash';\nimport MasterTimelineTask from './../../models/masterTimelineTask.model';\nvar RoomTimelineCtrl = require('./../roomTimeline/roomTimeline.controller');\nvar TimelineTaskCtrl = require('./../timelineTask/timelineTask.controller');\nvar async = require('async');\n\n\n\nfunction respondWithResult(res, statusCode) {\n  statusCode = statusCode || 200;\n  return function(entity) {\n    if (entity) {\n      res.status(statusCode).json(entity);\n    }\n  };\n}\n\nfunction saveUpdates(updates) {\n  return function(entity) {\n    var updated = _.extend(entity, updates);\n    return updated.save()\n      .then(updated => {\n        return updated;\n      });\n  };\n}\n\nfunction removeEntity(res) {\n  return function(entity) {\n    if (entity) {\n      return entity.remove()\n        .then(() => {\n          res.status(204).end();\n        });\n    }\n  };\n}\n\nfunction handleEntityNotFound(res) {\n  return function(entity) {\n    if (!entity) {\n      res.status(404).end();\n      return null;\n    }\n    return entity;\n  };\n}\n\nfunction handleError(res, statusCode) {\n  statusCode = statusCode || 500;\n  return function(err) {\n    res.status(statusCode).send(err);\n  };\n}\n\n// Gets a list of MasterTimelines\nexport function index(req, res) {\n  return MasterTimelineTask.find().exec()\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Gets a single MasterTimeline from the DB\nexport function show(req, res) {\n  return MasterTimelineTask.findById(req.params.id).exec()\n    .then(handleEntityNotFound(res))\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Creates a new MasterTimeline in the DB\nexport function create(req, res) {\n  return MasterTimelineTask.create(req.body)\n    .then(respondWithResult(res, 201))\n    .catch(handleError(res));\n}\n\n// Updates an existing MasterTimeline in the DB\nexport function update(req, res) {\n  if (req.body._id) {\n    delete req.body._id;\n  }\n\n  MasterTimelineTask.findById(req.params.id).exec()\n    .then(handleEntityNotFound(res))\n    .then(saveUpdates(req.body))\n    .then(updated => {\n      return res.status(200).json(updated);\n    })\n}\n\n// Deletes a MasterTimeline from the DB\nexport function destroy(req, res) {\n  return MasterTimelineTask.findById(req.params.id).exec()\n    .then(handleEntityNotFound(res))\n    .then(removeEntity(res))\n    .catch(handleError(res));\n}\n\n\nexport function getAllMasterTasks() {\n  return MasterTimelineTask.find({});\n}\n"]}