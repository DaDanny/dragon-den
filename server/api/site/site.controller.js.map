{"version":3,"sources":["../../../../server/api/site/site.controller.js"],"names":["index","newReoccurringTask","getReoccurringTasks","restoreReoccurringTask","getAllReoccurringTasks","shouldImportToSite","mongoose","require","CronJob","Utils","async","Q","_","respondWithResult","res","statusCode","entity","status","json","handleEntityNotFound","end","handleError","err","send","req","find","exec","then","catch","task","deferred","defer","findByIdAndUpdate","site","reoccurringTasks","_id","reject","resolve","promise","siteId","callback","findById","populate","taskId","taskIndex","indexOf","push","markModified","save","sites","reoccurringTask","reTasks","tasksLen","length","foundTask","t","String","templateId","masterCheckLocation","room","generateTasks","s","map","rooms","getRoomTasks","roomTasks","allRoomTasks","r","console","log","concat","findTask","tasksToday","priority","isModified","currentTasks","newTask","i","equals","tasks","today","Date","userTask","schedule","sameDay","scheduleDate"],"mappings":"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","file":"site.controller.js","sourcesContent":["/**\n * Created by Danny on 7/13/16.\n */\n'use strict';\nvar mongoose = require('mongoose');\nimport Site from './../../models/site.model';\nimport UserTask from './../../models/userTask.model';\nvar CronJob = require('cron').CronJob;\nvar Utils = require('../../components/Utils');\nvar async = require('async');\nvar Q = require('q');\nvar _ = require('lodash');\n\n\n//new CronJob('00 01 17 * * 0-6', function() {\n//  console.log('Test Time!');\n//}, null, true, null);\n//new CronJob('10 * * * * 0-6', function() {\n//  console.log('generate!');\n//  generateTasks();\n//}, null, true, null);\n\nfunction respondWithResult(res, statusCode) {\n  statusCode = statusCode || 200;\n  return function(entity) {\n    if (entity) {\n      return res.status(statusCode).json(entity);\n    }\n  };\n}\n\nfunction handleEntityNotFound(res) {\n  return function(entity) {\n    if (!entity) {\n      res.status(404).end();\n      return null;\n    }\n    return entity;\n  };\n}\n\nfunction handleError(res, statusCode) {\n  statusCode = statusCode || 500;\n  return function(err) {\n    return res.status(statusCode).send(err);\n  };\n}\n\nexport function index(req, res) {\n  return Site.find().exec()\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\nexport function newReoccurringTask(task) {\n  var deferred = Q.defer();\n  Site.findByIdAndUpdate(task.site, {'$push' : {reoccurringTasks : task._id}}, {'new' : true})\n    .exec(function(err, site) {\n      if(err) {\n        deferred.reject(err);\n      } else {\n        deferred.resolve(site);\n      }\n    })\n  return deferred.promise;\n}\n\nexport function getReoccurringTasks(siteId,callback) {\n  Site.findById(siteId, 'reoccurringTasks', function(err, site) {\n    if(err) callback(err);\n    else if(!site) callback({});\n    else {\n      Site.populate(site, 'reoccurringTasks', function(err) {\n        if(err) callback(err);\n        else callback(null,site.reoccurringTasks);\n      })\n    }\n  });\n}\n\nexport function restoreReoccurringTask(taskId, siteId) {\n  var deferred = Q.defer();\n  Site.findById(siteId, 'reoccurringTasks', function(err, site) {\n    if(err) return deferred.reject(err);\n    else if(!site) return deferred.reject();\n    else {\n      var taskIndex = _.indexOf(site.reoccurringTasks, taskId);\n      if(taskIndex === -1) {\n        site.reoccurringTasks.push(taskId);\n        site.markModified('reoccurringTasks');\n        site.save(function(err) {\n          if(err) return deferred.reject(err);\n          else return deferred.resolve();\n        })\n      } else {\n        return deferred.resolve()\n      }\n    }\n  })\n\n  return deferred.promise;\n}\n\nexport function getAllReoccurringTasks(callback) {\n  Site.find({}, 'reoccurringTasks', function(err, sites) {\n    if(err) callback(err);\n    else if(!sites) callback({});\n    else {\n      Site.populate(sites, 'reoccurringTasks', function(err) {\n        if(err) callback(err);\n        else callback(null,sites);\n      })\n    }\n  });\n}\n\nexport function shouldImportToSite(site,reoccurringTask) {\n  var deferred = Q.defer();\n  Site.findById(site, 'reoccurringTasks', function(err, site) {\n    if(err) deferred.reject(err);\n    else if(!site) deferred.reject();\n    else {\n      Site.populate(site, 'reoccurringTasks', function(err) {\n        if(err) callback(err);\n        else {\n          var reTasks = site.reoccurringTasks;\n          var tasksLen = reTasks.length;\n          var foundTask = false;\n          for(var t=0;t<tasksLen;t++) {\n            if(String(reTasks[t].templateId) == String(reoccurringTask.templateId)) {\n              if(reoccurringTask.masterCheckLocation == 'operation') {\n                foundTask = true;\n                break;\n              } else if(reoccurringTask.masterCheckLocation == 'room') {\n\n                if(reTasks[t].room == reoccurringTask.room) {\n                  foundTask = true;\n                  break;\n                }\n              }\n            }\n          }\n          if(foundTask) deferred.reject();\n          else deferred.resolve();\n        }\n      })\n    }\n  })\n\n  return deferred.promise;\n}\n\nfunction generateTasks() {\n  Site.find().exec()\n    .then(function(sites) {\n      for(var s=0;s<sites.length;s++) {\n        async.map(sites[s].rooms, getRoomTasks, function(err, roomTasks){ // Results is an array of tasks for each room\n          //for(var r=0;r<roomTasks.length;r++) {\n          //  for(var t=0;t<roomTasks[r].length;t++) {\n          //    if(!containsTask(sites[s].tasksToday, roomTasks[r][t])){\n          //      sites[s].tasksToday.push(roomTasks[r][t])\n          //      sites[s].save();\n          //    }\n          //  }\n          //}\n\n          var allRoomTasks = [];\n          for(var r=0;r<roomTasks.length;r++) {\n            console.log('task count: ', roomTasks[r].length);\n            console.log('task: ', roomTasks[r]);\n            allRoomTasks = allRoomTasks.concat(roomTasks[r]);\n\n            //if(roomTasks[r].length == 1) {\n            //  allRoomTasks.push(roomTasks[r]);\n            //} else{\n            //}\n          }\n\n          console.log('allRoom: ', allRoomTasks.length)\n          for(var t=0;t<allRoomTasks.length;t++) {\n            var taskIndex = findTask(sites[s].tasksToday, allRoomTasks[t]);\n            console.log('index: ', taskIndex);\n            if(taskIndex == -1) {\n              sites[s].tasksToday.push(allRoomTasks[t]);\n            } else {\n              sites[s].tasksToday[taskIndex].priority = 'important';\n              sites[s].markModified('tasksToday');\n            }\n          }\n        })\n        if(sites[s].isModified('tasksToday')){\n          console.log('modified!');\n          sites[s].save();\n        } else {\n\n          console.log('not modified!');\n        }\n      }\n      return null;\n    })\n    .catch(function(err) {\n      console.log('err: ', err);\n      return null;\n    })\n}\n\n\nfunction findTask(currentTasks, newTask) {\n  for(var i=0;i<currentTasks.length;i++) {\n    if(currentTasks[i].task.equals(newTask.task)) {\n      console.log('contains!');\n      return i;\n    }\n  }\n  return -1;\n}\n\nfunction getRoomTasks(room, callback) {\n  var tasksToday = [],\n    roomTasks = room.tasks;\n  var today = new Date();\n\n  // Iterate through each task in the room, adding tasks that occur on this day\n  for(var t=0;t<roomTasks.length;t++) {\n    var userTask;\n    if(roomTasks[t].schedule == 'daily') {\n      userTask = new UserTask({\n        task : roomTasks[t]._id,\n        status : 'needed',\n        priority : 'normal'\n      });\n      userTask.save(function(err) {\n        if(err) return callback(err);\n      })\n      tasksToday.push(userTask);\n    } else if(roomTasks[t].schedule == 'date') {\n      if(Utils.sameDay(roomTasks[t].scheduleDate, today)){\n        userTask = new UserTask({\n          task : roomTasks[t]._id,\n          status : 'needed',\n          priority : 'normal'\n        })\n        userTask.save(function(err) {\n          if(err) return callback(err);\n        })\n        tasksToday.push(userTask)\n      }\n    }\n  }\n  callback(null, tasksToday);\n}\n\n"]}