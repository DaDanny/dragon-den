{"version":3,"sources":["../../../../server/api/baseObject/baseObject.integration.js"],"names":["app","require","newBaseObject","describe","baseObjects","beforeEach","done","get","expect","end","err","res","body","it","should","be","instanceOf","Array","post","send","name","info","equal","baseObject","_id","afterEach","updatedBaseObject","put","delete"],"mappings":"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","file":"baseObject.integration.js","sourcesContent":["'use strict';\n\nvar app = require('../..');\nimport request from 'supertest';\n\nvar newBaseObject;\n\ndescribe('BaseObject API:', function() {\n\n  describe('GET /api/baseObject', function() {\n    var baseObjects;\n\n    beforeEach(function(done) {\n      request(app)\n        .get('/api/baseObject')\n        .expect(200)\n        .expect('Content-Type', /json/)\n        .end((err, res) => {\n          if (err) {\n            return done(err);\n          }\n          baseObjects = res.body;\n          done();\n        });\n    });\n\n    it('should respond with JSON array', function() {\n      baseObjects.should.be.instanceOf(Array);\n    });\n\n  });\n\n  describe('POST /api/baseObject', function() {\n    beforeEach(function(done) {\n      request(app)\n        .post('/api/baseObject')\n        .send({\n          name: 'New BaseObject',\n          info: 'This is the brand new baseObject!!!'\n        })\n        .expect(201)\n        .expect('Content-Type', /json/)\n        .end((err, res) => {\n          if (err) {\n            return done(err);\n          }\n          newBaseObject = res.body;\n          done();\n        });\n    });\n\n    it('should respond with the newly created baseObject', function() {\n      newBaseObject.name.should.equal('New BaseObject');\n      newBaseObject.info.should.equal('This is the brand new baseObject!!!');\n    });\n\n  });\n\n  describe('GET /api/baseObject/:id', function() {\n    var baseObject;\n\n    beforeEach(function(done) {\n      request(app)\n        .get('/api/baseObject/' + newBaseObject._id)\n        .expect(200)\n        .expect('Content-Type', /json/)\n        .end((err, res) => {\n          if (err) {\n            return done(err);\n          }\n          baseObject = res.body;\n          done();\n        });\n    });\n\n    afterEach(function() {\n      baseObject = {};\n    });\n\n    it('should respond with the requested baseObject', function() {\n      baseObject.name.should.equal('New BaseObject');\n      baseObject.info.should.equal('This is the brand new baseObject!!!');\n    });\n\n  });\n\n  describe('PUT /api/baseObject/:id', function() {\n    var updatedBaseObject;\n\n    beforeEach(function(done) {\n      request(app)\n        .put('/api/baseObject/' + newBaseObject._id)\n        .send({\n          name: 'Updated BaseObject',\n          info: 'This is the updated baseObject!!!'\n        })\n        .expect(200)\n        .expect('Content-Type', /json/)\n        .end(function(err, res) {\n          if (err) {\n            return done(err);\n          }\n          updatedBaseObject = res.body;\n          done();\n        });\n    });\n\n    afterEach(function() {\n      updatedBaseObject = {};\n    });\n\n    it('should respond with the updated baseObject', function() {\n      updatedBaseObject.name.should.equal('Updated BaseObject');\n      updatedBaseObject.info.should.equal('This is the updated baseObject!!!');\n    });\n\n  });\n\n  describe('DELETE /api/baseObject/:id', function() {\n\n    it('should respond with 204 on successful removal', function(done) {\n      request(app)\n        .delete('/api/baseObject/' + newBaseObject._id)\n        .expect(204)\n        .end((err, res) => {\n          if (err) {\n            return done(err);\n          }\n          done();\n        });\n    });\n\n    it('should respond with 404 when baseObject does not exist', function(done) {\n      request(app)\n        .delete('/api/baseObject/' + newBaseObject._id)\n        .expect(404)\n        .end((err, res) => {\n          if (err) {\n            return done(err);\n          }\n          done();\n        });\n    });\n\n  });\n\n});\n"]}