{"version":3,"sources":["../../../../server/api/baseObject/baseObject.controller.js"],"names":["index","show","create","update","destroy","mongoose","require","Utils","respondWithResult","res","statusCode","entity","status","json","saveUpdates","updates","updated","extend","save","then","removeEntity","remove","end","handleEntityNotFound","handleError","err","send","getCollection","model","collectionObj","undefined","req","Collection","params","headers","appversion","compareVersions","query","isNonGrow","$ne","find","exec","catch","findById","id","console","log","body","_id"],"mappings":"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","file":"baseObject.controller.js","sourcesContent":["/**\n * Using Rails-like standard naming convention for endpoints.\n * GET     /api/baseObject              ->  index\n * POST    /api/baseObject              ->  create\n * GET     /api/baseObject/:id          ->  show\n * PUT     /api/baseObject/:id          ->  update\n * DELETE  /api/baseObject/:id          ->  destroy\n */\n\n'use strict';\n\nimport _ from 'lodash';\nvar mongoose = require('mongoose');\nvar Utils = require('../../components/Utils');\n\nimport Site from './../../models/site.model';\nimport Room from './../../models/room.model';\nimport BaseModel from './../../models/base.model';\nimport Task from './../../models/task.model';\nimport UserTask from './../../models/userTask.model';\nimport TimelineTask from './../../models/timelineTask.model';\nimport Whiteboard from './../../models/whiteboard.model';\n\nfunction respondWithResult(res, statusCode) {\n  statusCode = statusCode || 200;\n  return function(entity) {\n    if (entity) {\n      return res.status(statusCode).json(entity);\n    }\n  };\n}\n\nfunction saveUpdates(updates) {\n  return function(entity) {\n    var updated = _.extend(entity, updates);\n    return updated.save()\n      .then(updated => {\n        return updated;\n      });\n  };\n}\n\nfunction removeEntity(res) {\n  return function(entity) {\n    if (entity) {\n      return entity.remove()\n        .then(() => {\n          return res.status(204).end();\n        });\n    }\n  };\n}\n\nfunction handleEntityNotFound(res) {\n  return function(entity) {\n    if (!entity) {\n      res.status(404).end();\n      return null;\n    }\n    return entity;\n  };\n}\n\nfunction handleError(res, statusCode) {\n  statusCode = statusCode || 500;\n  return function(err) {\n    return res.status(statusCode).send(err);\n  };\n}\n\nfunction getCollection(model) {\n  let collectionObj = {\n    'site' : Site,\n    'room' : Room,\n    'task' : Task,\n    'userTask' : UserTask,\n    'timelineTask' : TimelineTask,\n    'whiteboard' : Whiteboard,\n    undefined : BaseModel\n  }\n  return collectionObj[model];\n}\n\n// Gets a list of BaseObjects\nexport function index(req, res) {\n  var Collection = getCollection(req.params.model);\n  if(req.params.model === 'site' && req.headers.appversion) {\n    var compareVersions = Utils.compareVersions(req.headers.appversion, \"1.1.7\");\n    var query;\n    if(compareVersions < 0) {\n      query = {\n        isNonGrow : {$ne : true}\n      }\n    }\n    return Collection.find(query).exec()\n      .then(respondWithResult(res))\n      .catch(handleError(res));\n  } else {\n    return Collection.find().exec()\n      .then(respondWithResult(res))\n      .catch(handleError(res));\n  }\n}\n\n// Gets a single BaseObject from the DB\nexport function show(req, res) {\n  var Collection = getCollection(req.params.model);\n  return Collection.findById(req.params.id).exec()\n    .then(handleEntityNotFound(res))\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Creates a new BaseObject in the DB\nexport function create(req, res) {\n  var Collection = getCollection(req.params.model);\n  console.log('req: ', req.body);\n  return Collection.create(req.body)\n    .then(respondWithResult(res, 201))\n    .catch(handleError(res));\n}\n\n// Updates an existing BaseObject in the DB\nexport function update(req, res) {\n  if (req.body._id) {\n    delete req.body._id;\n  }\n  var Collection = getCollection(req.params.model);\n  return Collection.findById(req.params.id).exec()\n    .then(handleEntityNotFound(res))\n    .then(saveUpdates(req.body))\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Deletes a BaseObject from the DB\nexport function destroy(req, res) {\n  var Collection = getCollection(req.params.model);\n  return Collection.findById(req.params.id).exec()\n    .then(handleEntityNotFound(res))\n    .then(removeEntity(res))\n    .catch(handleError(res));\n}\n"]}