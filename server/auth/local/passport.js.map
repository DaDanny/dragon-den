{"version":3,"sources":["../../../../server/auth/local/passport.js"],"names":["setup","localAuthenticate","User","firstName","password","done","console","log","findOne","firstNameLower","toLowerCase","exec","then","user","message","authenticate","authError","authenticated","catch","err","emailAuthenticate","email","config","use","usernameField","passwordField"],"mappings":";;;;;QAqDgBA,K,GAAAA,K;;AArDhB;;;;AACA;;;;AAEA;AACA,SAASC,iBAAT,CAA2BC,IAA3B,EAAiCC,SAAjC,EAA4CC,QAA5C,EAAsDC,IAAtD,EAA4D;AAC1DC,UAAQC,GAAR,CAAY,aAAZ,EAA2BJ,SAA3B;AACAD,OAAKM,OAAL,CAAa;AACXC,oBAAgBN,UAAUO,WAAV;AADL,GAAb,EAEGC,IAFH,GAGGC,IAHH,CAGQ,gBAAQ;AACZ,QAAI,CAACC,IAAL,EAAW;AACT,aAAOR,KAAK,IAAL,EAAW,KAAX,EAAkB;AACvBS,iBAAS;AADc,OAAlB,CAAP;AAGD;AACDD,SAAKE,YAAL,CAAkBX,QAAlB,EAA4B,UAASY,SAAT,EAAoBC,aAApB,EAAmC;AAC7D,UAAID,SAAJ,EAAe;AACb,eAAOX,KAAKW,SAAL,CAAP;AACD;AACD,UAAI,CAACC,aAAL,EAAoB;AAClB,eAAOZ,KAAK,IAAL,EAAW,KAAX,EAAkB,EAAES,SAAS,+BAAX,EAAlB,CAAP;AACD,OAFD,MAEO;AACL,eAAOT,KAAK,IAAL,EAAWQ,IAAX,CAAP;AACD;AACF,KATD;AAUD,GAnBH,EAoBGK,KApBH,CAoBS;AAAA,WAAOb,KAAKc,GAAL,CAAP;AAAA,GApBT;AAqBD;;AAED,SAASC,iBAAT,CAA2BlB,IAA3B,EAAiCmB,KAAjC,EAAwCjB,QAAxC,EAAkDC,IAAlD,EAAwD;AACtDH,OAAKM,OAAL,CAAa;AACXa,WAAOA,MAAMX,WAAN;AADI,GAAb,EAEGC,IAFH,GAGGC,IAHH,CAGQ,gBAAQ;AACZ,QAAI,CAACC,IAAL,EAAW;AACT,aAAOR,KAAK,IAAL,EAAW,KAAX,EAAkB;AACvBS,iBAAS;AADc,OAAlB,CAAP;AAGD;AACDD,SAAKE,YAAL,CAAkBX,QAAlB,EAA4B,UAASY,SAAT,EAAoBC,aAApB,EAAmC;AAC7D,UAAID,SAAJ,EAAe;AACb,eAAOX,KAAKW,SAAL,CAAP;AACD;AACD,UAAI,CAACC,aAAL,EAAoB;AAClB,eAAOZ,KAAK,IAAL,EAAW,KAAX,EAAkB,EAAES,SAAS,+BAAX,EAAlB,CAAP;AACD,OAFD,MAEO;AACL,eAAOT,KAAK,IAAL,EAAWQ,IAAX,CAAP;AACD;AACF,KATD;AAUD,GAnBH,EAoBGK,KApBH,CAoBS;AAAA,WAAOb,KAAKc,GAAL,CAAP;AAAA,GApBT;AAqBD;;AAEM,SAASnB,KAAT,CAAeE,IAAf,EAAqBoB,MAArB,EAA6B;AAClC,qBAASC,GAAT,CAAa,4BAAkB;AAC7BC,mBAAe,WADc;AAE7BC,mBAAe,UAFc,CAEH;AAFG,GAAlB,EAGV,UAAStB,SAAT,EAAoBC,QAApB,EAA8BC,IAA9B,EAAoC;AACrC,WAAOJ,kBAAkBC,IAAlB,EAAwBC,SAAxB,EAAmCC,QAAnC,EAA6CC,IAA7C,CAAP;AACD,GALY,CAAb;;AAOA,qBAASkB,GAAT,CAAa,aAAb,EAA4B,4BAAkB;AAC5CC,mBAAgB,OAD4B;AAE5CC,mBAAgB;AAF4B,GAAlB,EAGzB,UAASJ,KAAT,EAAgBjB,QAAhB,EAA0BC,IAA1B,EAAgC;AACjC,WAAOe,kBAAkBlB,IAAlB,EAAwBmB,KAAxB,EAA+BjB,QAA/B,EAAyCC,IAAzC,CAAP;AACD,GAL2B,CAA5B;AAMD","file":"passport.js","sourcesContent":["import passport from 'passport';\nimport {Strategy as LocalStrategy} from 'passport-local';\n\n// TODO Remove password required & Allow username login\nfunction localAuthenticate(User, firstName, password, done) {\n  console.log('firstName: ', firstName);\n  User.findOne({\n    firstNameLower: firstName.toLowerCase()\n  }).exec()\n    .then(user => {\n      if (!user) {\n        return done(null, false, {\n          message: 'This name is not registered.'\n        });\n      }\n      user.authenticate(password, function(authError, authenticated) {\n        if (authError) {\n          return done(authError);\n        }\n        if (!authenticated) {\n          return done(null, false, { message: 'This password is not correct.' });\n        } else {\n          return done(null, user);\n        }\n      });\n    })\n    .catch(err => done(err));\n}\n\nfunction emailAuthenticate(User, email, password, done) {\n  User.findOne({\n    email: email.toLowerCase()\n  }).exec()\n    .then(user => {\n      if (!user) {\n        return done(null, false, {\n          message: 'This email is not registered.'\n        });\n      }\n      user.authenticate(password, function(authError, authenticated) {\n        if (authError) {\n          return done(authError);\n        }\n        if (!authenticated) {\n          return done(null, false, { message: 'This password is not correct.' });\n        } else {\n          return done(null, user);\n        }\n      });\n    })\n    .catch(err => done(err));\n}\n\nexport function setup(User, config) {\n  passport.use(new LocalStrategy({\n    usernameField: 'firstName',\n    passwordField: 'password' // this is the virtual field on the model\n  }, function(firstName, password, done) {\n    return localAuthenticate(User, firstName, password, done);\n  }));\n\n  passport.use('local-email', new LocalStrategy({\n    usernameField : 'email',\n    passwordField : 'password'\n  }, function(email, password, done) {\n    return emailAuthenticate(User, email, password, done);\n  }))\n}\n"]}