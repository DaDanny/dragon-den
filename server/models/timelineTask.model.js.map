{"version":3,"sources":["../../../server/models/timelineTask.model.js"],"names":["extend","require","Schema","BaseSchema","schema","RoomTimeline","model","Site","async","dateUtil","FDate","explain","_","DeletedTLTask","TimelineTaskSchema","occurrenceDate","type","Date","set","standardizeDate","forCycleStarting","completed","Boolean","default","completedDate","completedByUser","String","priority","subPriority","Object","color","sortLevel","room","Types","ObjectId","ref","site","notes","taskDetails","hasProblem","problemText","hasProblemDate","problemByUser","notNeeded","notNeedText","notNeededDate","notNeededByUser","taskDay","taskWeek","inPeriod","title","backgroundColor","warningColor","timeEstimate","occurrenceObj","occurrenceInfo","isMaster","taskTLTemplate","taskType","checkTemplateObj","taskRepeatCustom","Number","taskRepeatPreset","taskRepeatDays","Array","taskLastBuilt","testTask","templateId","masterCheckLocation","taskEvents","images","isChildTask","parentTask","previousParentTask","childTasks","childIndex","fromTLTemplate","masterTaskId","timestamps","pre","next","taskId","_id","siteId","findByIdAndUpdate","$pull","reoccurringTasks","err","deletedTLTask","toObject","deletedDate","__t","save","dateHooks","path","newVal","originalParent","equals","prevParent","parentTaskId","childTaskId","previousParentTaskId","self","isNew","constructor","$addToSet","exec","isModified","post","task","findById","populate","updatedParent","checkChildTasks","console","log","hasIssue","checkForIssueChild","checkForCompletedChildren","issueTasks","filter","newestIssueTask","max","o","getTime","completedTasks","every","c","newestCompleted","index"],"mappings":"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","file":"timelineTask.model.js","sourcesContent":["/**\n * Created by Danny on 9/23/16.\n */\n\nimport mongoose from 'mongoose';\nvar extend = require('mongoose-schema-extend');\nvar Schema = mongoose.Schema;\nimport BaseModel from './base.model';\nvar BaseSchema = BaseModel.schema;\nvar RoomTimeline = mongoose.model('RoomTimeline');\nvar Site = mongoose.model('Site');\nvar async = require('async');\nvar dateUtil = require('./../components/Date.Utils');\nvar FDate = require('./fDate.type');\nvar explain = require('mongoose-explain');\nvar _ = require('lodash');\nvar DeletedTLTask = mongoose.model('DeletedTLTask');\n\nvar TimelineTaskSchema = BaseSchema.extend({\n  occurrenceDate : {type : Date, set: dateUtil.standardizeDate},\n  forCycleStarting : {type : Date, set: dateUtil.standardizeDate},\n  completed : {type: Boolean, default : false},\n  completedDate : {type : Date, set: dateUtil.standardizeDate},\n  completedByUser : String,\n  priority : {type: String, default: 'normal'},\n  subPriority : {type : Object, default : {\n    color : '#4CAF50',\n    sortLevel : 14\n  }},\n  room : {type: Schema.Types.ObjectId, ref: 'Room'},\n  site : {type: Schema.Types.ObjectId, ref: 'Site'},\n  notes : {type: String, default: ''},\n  taskDetails : {type: String, default: ''},\n  hasProblem : {type : Boolean, default: false},\n  problemText : {type: String, default: ''},\n  hasProblemDate : {type : Date, set: dateUtil.standardizeDate},\n  problemByUser : String,\n  notNeeded : {type : Boolean, default: false},\n  notNeedText : {type: String, default: ''},\n  notNeededDate : {type : Date, set: dateUtil.standardizeDate},\n  notNeededByUser : String,\n  taskDay : String,\n  taskWeek : String,\n  inPeriod : String,\n  title : String,\n  backgroundColor : String,\n  warningColor : String,\n  timeEstimate : Object,\n  occurrenceObj : Object,\n  occurrenceInfo : Object,\n  isMaster : {type: Boolean, default : false},\n  taskTLTemplate : {type : Schema.Types.ObjectId, ref: 'Timeline'},\n  taskType : String,\n  checkTemplateObj : {type: Boolean},\n  taskRepeatCustom : Number,\n  taskRepeatPreset : String,\n  taskRepeatDays : Array,\n  taskLastBuilt : {type : Date, set: dateUtil.standardizeDate},\n  testTask : Boolean,\n  templateId : {type: Schema.Types.ObjectId},\n  masterCheckLocation : String,\n  taskEvents : Array,\n  images : Array,\n  isChildTask : {type : Boolean, default : false},\n  parentTask : {type: Schema.Types.ObjectId, ref: 'TimelineTask'},\n  previousParentTask : {type: Schema.Types.ObjectId, ref: 'TimelineTask'},\n  childTasks : [{type: Schema.Types.ObjectId, ref: 'TimelineTask'}],\n  childIndex : {type : Number, default : null},\n  fromTLTemplate : {type : Schema.Types.ObjectId, ref: 'Timeline'},\n  masterTaskId : {type: Schema.Types.ObjectId, ref: 'TimelineTask'}\n}, {\n  timestamps : true\n})\n\nTimelineTaskSchema.pre('remove', function(next) {\n  var taskId = this._id,\n    siteId = null;\n  if(this.site && !this.site._id) {\n    siteId = this.site;\n  } else if(this.site) {\n    siteId = this.site._id;\n  }\n  if(this.checkTemplateObj && !this.isMaster) {\n    Site.findByIdAndUpdate(siteId,\n      {$pull : { reoccurringTasks : taskId}},\n      function(err, site) {\n        if(err) next(err);\n        else next();\n      });\n  } else {\n    next();\n  }\n});\n\nTimelineTaskSchema.pre('remove', function(next) {\n  var deletedTLTask = new DeletedTLTask(this.toObject());\n  deletedTLTask.deletedDate = new Date();\n  deletedTLTask.__t = 'DeletedTLTask';\n  deletedTLTask.save(function(err) {\n    next();\n  })\n})\n\n//TimelineTaskSchema.pre('find', function(next) {\n//  this.populate('site room');\n//  next();\n//})\n\nvar dateHooks = ['occurrenceDate', 'endDate', 'flippedDate'];\n\nTimelineTaskSchema.path('parentTask').set(function(newVal) {\n  let originalParent = this.parentTask;\n  if(originalParent && !originalParent.equals(newVal)) {\n    this.previousParentTask = originalParent;\n    let prevParent = originalParent;\n    if(prevParent._id) this.previousParentTask = prevParent._id;\n    else this.previousParentTask = prevParent;\n  } else {\n    this.previousParentTask = newVal;\n  }\n  return newVal;\n})\n\nTimelineTaskSchema.pre('save', function(next) {\n  let parentTaskId = this.parentTask,\n    childTaskId = this._id,\n    previousParentTaskId = this.previousParentTask,\n    self = this;\n  if(parentTaskId && parentTaskId._id) parentTaskId = parentTaskId._id;\n  if(previousParentTaskId && previousParentTaskId._id) previousParentTaskId = previousParentTaskId._id;\n  // If we created a new child task, add the new task to it's parent's childTasks array\n  if(this.isNew && this.parentTask) {\n    this.isChildTask = true;\n    this.constructor.findByIdAndUpdate(parentTaskId, {$addToSet : {childTasks : childTaskId}})\n      .exec(function(err, parentTask) {\n        if(err) next(err);\n        else next();\n      })\n  } else if(parentTaskId && !parentTaskId.equals(previousParentTaskId)) { // If we changed parent tasks, remove child from previous parent\n    this.constructor.findByIdAndUpdate(previousParentTaskId, {$pull : {childTasks : childTaskId}})\n      .exec(function(err, parentTask) {\n        if(err) next(err);\n        else {\n          // Be sure to save it to the new parent\n          self.previousParentTask = parentTaskId;\n          self.constructor.findByIdAndUpdate(parentTaskId, {$addToSet : {childTasks : childTaskId}})\n            .exec(function(err, parentTask) {\n              if(err) next(err);\n              else next();\n            })\n        }\n      })\n  } else if(this.isModified('parentTask')) {\n    if(!this.parentTask && this.previousParentTask) {\n      self.constructor.findByIdAndUpdate(previousParentTaskId, {$pull : {childTasks : childTaskId}})\n        .exec(function(err, parentTask) {\n          if(err) next(err);\n          else next();\n      })\n    } else if(this.parentTask && this.previousParentTask) {\n      self.constructor.findByIdAndUpdate(parentTaskId, {$addToSet : {childTasks : childTaskId}})\n        .exec(function(err, parentTask) {\n          if(err) next(err);\n          else next();\n        })\n    } else {\n      next();\n    }\n  } else {\n    next();\n  }\n})\n\nTimelineTaskSchema.post('save', function() {\n  if(this.isChildTask) {\n    let task = this;\n    let parentTaskId = task.parentTask;\n    this.constructor.findById(parentTaskId)\n      .populate('childTasks')\n      .exec(function(err, parentTask) {\n        if(!err && parentTask) {\n          let updatedParent = _.extend(parentTask, checkChildTasks(parentTask));\n          updatedParent.save(function(err) {\n            if(err) console.log('update parent err' , err);\n            else console.log('updated parent success');\n          })\n        }\n      })\n  }\n})\n\nfunction checkChildTasks(parentTask) {\n  let hasIssue = checkForIssueChild(parentTask);\n  if(hasIssue.hasProblem) {\n    parentTask.hasProblem = true;\n    parentTask.problemByUser = hasIssue.problemByUser;\n    parentTask.hasProblemDate = hasIssue.hasProblemDate;\n    parentTask.completed = false;\n    parentTask.completedDate = null;\n    parentTask.completedByUser = null;\n    return parentTask;\n  } else {\n    parentTask.hasProblem = false;\n    parentTask.problemByUser = null;\n    parentTask.hasProblemDate = null;\n  }\n\n  let completed = checkForCompletedChildren(parentTask);\n  if(completed.completed) {\n    parentTask.hasProblem = false;\n    parentTask.problemByUser = null;\n    parentTask.hasProblemDate = null;\n    parentTask.completed = true;\n    parentTask.completedDate = completed.completedDate;\n    parentTask.completedByUser = completed.completedByUser;\n    return parentTask;\n  } else {\n    parentTask.completed = false;\n    parentTask.completedDate = null;\n    parentTask.completedByUser = null;\n  }\n  return parentTask;\n}\n\nfunction checkForIssueChild(parentTask) {\n  let issueTasks = _.filter(parentTask.childTasks, 'hasProblem');\n  let newestIssueTask = _.max(issueTasks, function(o) {\n    return new Date(o.hasProblemDate).getTime();\n  })\n  if(newestIssueTask) {\n    return {\n      hasProblem : true,\n      problemByUser : newestIssueTask.problemByUser,\n      hasProblemDate : newestIssueTask.hasProblemDate\n    }\n  } else {\n    return {\n      hasProblem : false\n    }\n  }\n}\n\nfunction checkForCompletedChildren(parentTask) {\n  let completedTasks = _.every(parentTask.childTasks, function(c) {\n    return c.completed || c.notNeeded;\n  });\n\n  if(completedTasks) {\n    let newestCompleted = _.max(parentTask.childTasks, function(o) {\n      if(o.notNeeded) {\n        return new Date(o.notNeededDate).getTime();\n      } else if(o.completed) {\n        return new Date(o.completedDate).getTime();\n      }\n    })\n    if(newestCompleted) {\n      if (newestCompleted.notNeeded) {\n        return {\n          completed: true,\n          completedByUser: newestCompleted.notNeededByUser,\n          completedDate: newestCompleted.notNeededDate\n        }\n      } else {\n        return {\n          completed: true,\n          completedByUser: newestCompleted.completedByUser,\n          completedDate: newestCompleted.completedDate\n        }\n      }\n    } else {\n      return {\n        completed : false\n      }\n    }\n  } else {\n    return {\n      completed : false\n    }\n  }\n}\n\n\n\nTimelineTaskSchema.index({room : 1});\nTimelineTaskSchema.index({site: 1});\nTimelineTaskSchema.index({room: 1, taskType : 1});\nTimelineTaskSchema.index({isMaster : 1, taskType : 1});\nTimelineTaskSchema.index({checkTemplateObj: 1});\n//TimelineTaskSchema.plugin(explain);\n\nexport default mongoose.model('TimelineTask', TimelineTaskSchema);\n"]}